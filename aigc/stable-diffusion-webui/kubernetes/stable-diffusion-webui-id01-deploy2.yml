apiVersion: apps/v1
kind: Deployment
metadata:
  #命名规范:应用名称-版本
  name: stable-diffusion-webui-id01-deploy
  namespace: online
  labels:
    app: stable-diffusion-webui-id01
spec:
  #保留历史版本数量
  revisionHistoryLimit: 3
  replicas: 1
  selector:
    matchLabels:
      app: stable-diffusion-webui-id01
      version: v2
#  minReadySeconds: 60     #滚动升级时60s后认为该pod就绪
  strategy:
    rollingUpdate:  ##由于replicas为3,则整个升级,pod个数在2-4个之间
      maxSurge: 1      #滚动升级时会先启动1个pod
      maxUnavailable: 1 #滚动升级时允许的最大Unavailable的pod个数
  template:
    metadata:
      labels:
        app: stable-diffusion-webui-id01
        version: v2
      #annotations:
        #enable istio sidecar injection
        #sidecar.istio.io/inject: "true"
    spec:
      nodeSelector:
        gpu: "4090"
      terminationGracePeriodSeconds: 60 ##k8s将会给应用发送SIGTERM信号，可以用来正确、优雅地关闭应用,默认为30秒
      #imagePullSecrets:
      #- name: registrykey
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values:
                    - stable-diffusion-webui-id01
              topologyKey: "kubernetes.io/hostname"
      containers:
      - name: stable-diffusion-webui
        image: turbo-ai.cn:5000/slpcat/stable-diffusion-webui:v1.2.1-bullseye
        workingDir: '/opt/stable-diffusion-webui'
        command:
          - '/bin/bash'
        args:
          - '-c'
          - './webui.sh'
        imagePullPolicy: Always
        #livenessProbe: #kubernetes认为该pod是存活的,不存活则需要重启
        #  httpGet:
        #    path: /
        #    port: 7860
        #    scheme: HTTP
        #  initialDelaySeconds: 60 ## equals to the maximum startup time of the application + couple of seconds
        #  timeoutSeconds: 5
        #  successThreshold: 1
        #  failureThreshold: 5
        #readinessProbe: #kubernetes认为该pod是启动成功的
        #  httpGet:
        #    path: /
        #    port: 7860
        #    scheme: HTTP
        #  initialDelaySeconds: 30 ## equals to minimum startup time of the application
        #  timeoutSeconds: 5
        #  successThreshold: 1
        #  failureThreshold: 5
        resources:
          # keep request = limit to keep this container in guaranteed class
    resources:
      requests:
      limits:
          requests:
            cpu: 1
            memory: 1Gi
            tencent.com/vcuda-core: 20
            tencent.com/vcuda-memory: 30
          limits:
            cpu: 16
            #nvidia.com/gpu: 1 # requesting 1 GPU
            memory: 32Gi
            tencent.com/vcuda-core: 20
            tencent.com/vcuda-memory: 30
        env:
          # cpu 
          - name: CUDA_VISIBLE_DEVICES
            value: "-1"
          - name: COMMANDLINE_ARGS
            value: "--use-cpu all --no-half --precision full --skip-torch-cuda-test --enable-insecure-extension-access --listen --api"
          #gpu
          #- name: COMMANDLINE_ARGS
          #  value: "--theme dark --xformers --enable-insecure-extension-access --listen --api --gradio-queue --enable-console-prompts"
        #日志采集
          #- name: aliyun_logs_liveops-k8s-access-serverlog
          #  value: "stdout"
          #- name: aliyun_logs_liveops-k8s-access-serverlog
          #  value: "/var/log/*.log"
        ports:
          - name: tcp
            containerPort: 7860
        volumeMounts:
          - name: data
            mountPath: /opt
      volumes:
      #- name: log
      #  emptyDir: {}
      - name: data
        persistentVolumeClaim:
          claimName: stable-diffusion-webui-id01-data
