apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka-id01
  namespace: dbaas
spec:
  selector:
    matchLabels:
      app: kafka-id01
  serviceName: kafka-id01-headless-svc
  podManagementPolicy: Parallel
  replicas: 3
  template:
    metadata:
      labels:
        app: kafka
      annotations:
        #disable istio sidecar injection
        sidecar.istio.io/inject: "false"
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: "app"
                    operator: In
                    values: 
                    - kafka-id01
              topologyKey: "kubernetes.io/hostname"
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
             - weight: 1
               podAffinityTerm:
                 labelSelector:
                    matchExpressions:
                      - key: "app"
                        operator: In
                        values: 
                        - zk
                 topologyKey: "kubernetes.io/hostname"
      terminationGracePeriodSeconds: 300
      containers:
      - name: kafka-broker
        imagePullPolicy: IfNotPresent
        image: slpcat/kafka:v2.2.0-alpine
        resources:
          requests:
            memory: "1Gi"
            cpu: 500m
          limits:
            memory: "8Gi"
            cpu: 4
        ports:
        - containerPort: 9092
          name: server
        - containerPort: 9999
          name: jmx
        command:
        - sh
        - -c
        - "exec kafka-server-start.sh /opt/kafka/config/server.properties \
          --override broker.id=${POD_NAME##*-} \
          --override listeners=PLAINTEXT://:9092 \
          --override advertised.listeners=PLAINTEXT://${POD_IP}:9092 \
          --override zookeeper.connect=zk-0.zk-svc.dbaas.svc.cluster.local:2181,zk-1.zk-svc.dbaas.svc.cluster.local:2181,zk-2.zk-svc.dbaas.svc.cluster.local:2181/kafka \
          --override log.dirs=/var/lib/kafka/data \
          --override auto.create.topics.enable=false \
          --override auto.leader.rebalance.enable=true \
          --override background.threads=10 \
          --override broker.id.generation.enable=true \
          --override compression.type=producer \
          --override connections.max.idle.ms=600000 \
          --override controlled.shutdown.enable=true \
          --override controlled.shutdown.max.retries=3 \
          --override controlled.shutdown.retry.backoff.ms=5000 \
          --override controller.socket.timeout.ms=30000 \
          --override dbaas.replication.factor=2 \
          --override delete.topic.enable=true \
          --override fetch.purgatory.purge.interval.requests=1000 \
          --override fetch.message.max.bytes=10000000 \
          --override group.max.session.timeout.ms=300000 \
          --override group.min.session.timeout.ms=6000 \
          --override inter.broker.protocol.version=2.2 \
          --override leader.imbalance.check.interval.seconds=300 \
          --override leader.imbalance.per.broker.percentage=10 \
          --override log.flush.interval.messages=50000000 \
          --override log.flush.interval.ms=600000 \
          --override log.flush.offset.checkpoint.interval.ms=60000 \
          --override log.flush.scheduler.interval.ms=60000 \
          --override log.retention.bytes=10737418240 \
          --override log.retention.hours=168 \
          --override log.roll.hours=24 \
          --override log.roll.jitter.hours=0 \
          --override log.segment.bytes=1073741824 \
          --override log.segment.delete.delay.ms=60000 \
          --override log.cleaner.backoff.ms=15000 \
          --override log.cleaner.dedupe.buffer.size=134217728 \
          --override log.cleaner.delete.retention.ms=86400000 \
          --override log.cleaner.enable=true \
          --override log.cleaner.io.buffer.load.factor=0.9 \
          --override log.cleaner.io.buffer.size=524288 \
          --override log.cleaner.io.max.bytes.per.second=1.7976931348623157E308 \
          --override log.cleaner.min.cleanable.ratio=0.5 \
          --override log.cleaner.min.compaction.lag.ms=0 \
          --override log.cleaner.threads=4 \
          --override log.cleanup.policy=delete \
          --override log.index.interval.bytes=4096 \
          --override log.index.size.max.bytes=10485760 \
          --override log.message.timestamp.difference.max.ms=9223372036854775807 \
          --override log.message.timestamp.type=CreateTime \
          --override log.preallocate=false \
          --override log.retention.check.interval.ms=300000 \
          --override max.connections.per.ip=4096 \
          --override message.max.bytes=1000012 \
          --override min.insync.replicas=1 \
          --override num.io.threads=8 \
          --override num.network.threads=32 \
          --override num.partitions=4 \
          --override num.recovery.threads.per.data.dir=4 \
          --override num.replica.fetchers=4 \
          --override offset.metadata.max.bytes=4096 \
          --override offsets.commit.required.acks=0 \
          --override offsets.commit.timeout.ms=5000 \
          --override offsets.load.buffer.size=5242880 \
          --override offsets.retention.check.interval.ms=600000 \
          --override offsets.retention.minutes=1440 \
          --override offsets.topic.compression.codec=0 \
          --override offsets.topic.num.partitions=50 \
          --override offsets.topic.replication.factor=2 \
          --override offsets.topic.segment.bytes=1073741824 \
          --override producer.purgatory.purge.interval.requests=1000 \
          --override queued.max.requests=2000 \
          --override quota.consumer.dbaas=9223372036854775807 \
          --override quota.producer.dbaas=9223372036854775807 \
          --override replica.fetch.min.bytes=1 \
          --override replica.fetch.wait.max.ms=500 \
          --override replica.high.watermark.checkpoint.interval.ms=5000 \
          --override replica.lag.time.max.ms=10000 \
          --override replica.socket.receive.buffer.bytes=10485760 \
          --override replica.socket.timeout.ms=30000 \
          --override replica.fetch.backoff.ms=1000 \
          --override replica.fetch.max.bytes=52428800 \
          --override replica.fetch.response.max.bytes=52428800 \
          --override request.timeout.ms=30000 \
          --override reserved.broker.max.id=1000 \
          --override socket.receive.buffer.bytes=1048576 \
          --override socket.request.max.bytes=104857600 \
          --override socket.send.buffer.bytes=1048576 \
          --override unclean.leader.election.enable=true \
          --override zookeeper.session.timeout.ms=6000 \
          --override zookeeper.set.acl=false "
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: KAFKA_HEAP_OPTS
          value: "-XX:MaxRAMFraction=2 -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
        - name: KAFKA_JVM_PERFORMANCE_OPTS
          value: "-server -Djava.awt.headless=true -Djava.nio.channels.spi.SelectorProvider=sun.nio.ch.EPollSelectorProvider -Xverify:none -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=512m -XX:ReservedCodeCacheSize=240M -XshowSettings:vm -XX:+AggressiveOpts -XX:-UseBiasedLocking -XX:+UseFastAccessorMethods -XX:+UseG1GC -XX:+ExplicitGCInvokesConcurrent -XX:SoftRefLRUPolicyMSPerMB=0 -XX:G1ReservePercent=25 -XX:G1NewSizePercent=10 -XX:G1MaxNewSizePercent=25 -XX:MaxGCPauseMillis=20 -XX:-OmitStackTraceInFastThrow -XX:+ParallelRefProcEnabled -XX:ParallelGCThreads=8 -XX:MaxTenuringThreshold=1 -XX:G1HeapWastePercent=10 -XX:SurvivorRatio=8 -XX:G1MixedGCCountTarget=16 -XX:G1MixedGCLiveThresholdPercent=90 -XX:InitiatingHeapOccupancyPercent=35 -XX:G1HeapRegionSize=32m -XX:+PerfDisableSharedMem -XX:-ResizePLAB"
#export HBASE_OPTS="-XX:+UseConcMarkSweepGC"
        - name: KAFKA_OPTS
          value: " -Dlogging.level=INFO"
        #- name: JMX_PORT
        #  value: "9999"
        #- name: KAFKA_JMX_OPTS
        #  value: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false"
        volumeMounts:
        - name: datadir
          mountPath: /var/lib/kafka
        readinessProbe:
          tcpSocket:
            port: 9092
          timeoutSeconds: 1
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 20Gi
